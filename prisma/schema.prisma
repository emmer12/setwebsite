generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialActions"]
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Account {
    id                 String    @id @default(auto()) @map("_id") @db.ObjectId
    userId             String    @db.ObjectId
    providerType       String
    providerId         String
    providerAccountId  String
    refreshToken       String?
    accessToken        String?
    accessTokenExpires DateTime?
    createdAt          DateTime  @default(now())
    updatedAt          DateTime  @updatedAt
    user               User      @relation(fields: [userId], references: [id])

    @@unique([providerId, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    userId       String   @db.ObjectId
    expires      DateTime
    sessionToken String   @unique
    accessToken  String   @unique
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    user         User     @relation(fields: [userId], references: [id])
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    accounts      Account[]
    sessions      Session[]
    password      String
}

model VerificationRequest {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@unique([identifier, token])
}

model BackdropCategory {
    id          String      @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    slug        String
    description String?
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    Backdrops   Backdrops[]
}

model Backdrops {
    id          String           @id @default(auto()) @map("_id") @db.ObjectId
    price       Float
    title       String
    slug        String
    description String
    stockStatus StockStatus      @default(IN_STOCK)
    discount    Int              @default(0)
    addOn       String[]
    imageUrl    String?
    categoryId  String           @db.ObjectId
    createdAt   DateTime         @default(now())
    updatedAt   DateTime         @updatedAt
    category    BackdropCategory @relation(fields: [categoryId], references: [id])
}

enum StockStatus {
    IN_STOCK
    OUT_OF_STOCK
    LIMITED_QUANTITY
}

model Blog {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    title     String
    slug      String
    content   String?
    imageUrl  String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    eUrl      String?
}
